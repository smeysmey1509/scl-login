import './ToasterMessage.css'

const ToastMessage = [
    {
        title: "Login successfully",
        description: "Your login has successfully.",
        svg: <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M8.6 14.6L15.65 7.55L14.25 6.15L8.6 11.8L5.75 8.95L4.35 10.35L8.6 14.6ZM10 20C8.61667 20 7.31667 19.7373 6.1 19.212C4.88333 18.6873 3.825 17.975 2.925 17.075C2.025 16.175 1.31267 15.1167 0.788 13.9C0.262667 12.6833 0 11.3833 0 10C0 8.61667 0.262667 7.31667 0.788 6.1C1.31267 4.88333 2.025 3.825 2.925 2.925C3.825 2.025 4.88333 1.31233 6.1 0.787C7.31667 0.262333 8.61667 0 10 0C11.3833 0 12.6833 0.262333 13.9 0.787C15.1167 1.31233 16.175 2.025 17.075 2.925C17.975 3.825 18.6873 4.88333 19.212 6.1C19.7373 7.31667 20 8.61667 20 10C20 11.3833 19.7373 12.6833 19.212 13.9C18.6873 15.1167 17.975 16.175 17.075 17.075C16.175 17.975 15.1167 18.6873 13.9 19.212C12.6833 19.7373 11.3833 20 10 20Z"
                fill="#00DF80"/>
        </svg>
        ,
        type: "success"
    },
    {
        title: "No internet connection.",
        description: "Please check your network and try again.",
        svg: <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="10" cy="10" r="10" fill="#F05C42"/>
            <path d="M13.25 8.9996C11.3662 7.33347 8.75 7.33347 6.75 8.9996" stroke="#242C32" stroke-linecap="round"
                  stroke-linejoin="round"/>
            <path d="M5 7.49936C8.15789 4.83356 11.8421 4.83355 15 7.49931" stroke="#242C32" stroke-linecap="round"
                  stroke-linejoin="round"/>
            <path
                d="M9.99643 11.4893V12.2449M9.99643 13.2303V13.2458M10.0719 10.0004C10.2464 9.99374 10.6872 10.0782 11.1172 10.8379L12.194 12.6838C12.6052 13.2928 12.8074 14.3856 11.2934 14.4675L9.99975 14.4967L8.69181 14.4596C7.17778 14.3777 7.41079 13.2935 7.79127 12.6759L8.86801 10.83C9.29798 10.0703 9.7388 9.98587 9.91329 9.99253L10.0719 10.0004Z"
                stroke="#242C32" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
        ,
        type: "no-connection"
    },
    {
        title: "Login Unsuccessfully",
        description: "Your login was unsuccess ful.",
        svg: <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path
                d="M6.4 15L10 11.4L13.6 15L15 13.6L11.4 10L15 6.4L13.6 5L10 8.6L6.4 5L5 6.4L8.6 10L5 13.6L6.4 15ZM10 20C8.61667 20 7.31667 19.7373 6.1 19.212C4.88333 18.6873 3.825 17.975 2.925 17.075C2.025 16.175 1.31267 15.1167 0.788 13.9C0.262667 12.6833 0 11.3833 0 10C0 8.61667 0.262667 7.31667 0.788 6.1C1.31267 4.88333 2.025 3.825 2.925 2.925C3.825 2.025 4.88333 1.31233 6.1 0.787C7.31667 0.262333 8.61667 0 10 0C11.3833 0 12.6833 0.262333 13.9 0.787C15.1167 1.31233 16.175 2.025 17.075 2.925C17.975 3.825 18.6873 4.88333 19.212 6.1C19.7373 7.31667 20 8.61667 20 10C20 11.3833 19.7373 12.6833 19.212 13.9C18.6873 15.1167 17.975 16.175 17.075 17.075C16.175 17.975 15.1167 18.6873 13.9 19.212C12.6833 19.7373 11.3833 20 10 20Z"
                fill="#F04248"/>
        </svg>
        ,
        type: "unsuccess"
    },
    {
        title: "New device detected.",
        description: "Are you try to sign in new device? ",
        svg: <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
            <circle cx="10" cy="10" r="10" fill="#0562BB"/>
            <path
                d="M13.7422 5C14.1995 5 14.5929 4.99889 14.9063 5.04102C15.234 5.08509 15.5479 5.18467 15.8027 5.43946L15.8916 5.53711C16.082 5.77244 16.1626 6.04914 16.2012 6.33594C16.2433 6.64931 16.2422 7.04273 16.2422 7.5V10.7275C16.2422 11.1844 16.2432 11.5774 16.2012 11.8906C16.1626 12.1773 16.0818 12.4542 15.8916 12.6895L15.8027 12.7881C15.548 13.0427 15.2339 13.1425 14.9063 13.1865C14.5929 13.2287 14.1995 13.2275 13.7422 13.2275H11.8272V13.8359H12.5332L12.6338 13.8457C12.8616 13.8923 13.0332 14.0943 13.0332 14.3359C13.0332 14.5776 12.8616 14.7796 12.6338 14.8262L12.5332 14.8359H7.71485C7.4387 14.8359 7.21485 14.6121 7.21485 14.3359C7.21485 14.0598 7.4387 13.8359 7.71485 13.8359H8.41797V13.2275H6.5C6.04273 13.2275 5.64931 13.2287 5.33594 13.1865C5.04901 13.1479 4.77251 13.0666 4.53711 12.876L4.43946 12.7881C4.18462 12.5333 4.08508 12.2184 4.04102 11.8906C4.02 11.7341 4.00988 11.5577 4.00489 11.3633L4 10.7275V7.5C4 7.04273 3.99889 6.64931 4.04102 6.33594C4.0851 6.00824 4.18467 5.69425 4.43946 5.43946L4.53711 5.35059C4.77244 5.16019 5.04915 5.07959 5.33594 5.04102C5.64931 4.99889 6.04273 5 6.5 5H13.7422ZM9.41797 13.8359H10.8272V13.2275H9.41797V13.8359ZM6.5 6C6.01471 6 5.70095 6.00119 5.46973 6.03223C5.30744 6.05405 5.22801 6.08561 5.18262 6.11621L5.14649 6.14649C5.10843 6.18455 5.06139 6.25286 5.03223 6.46973C5.00119 6.70095 5 7.01471 5 7.5V10.7275L5.00489 11.3379C5.00904 11.5059 5.01669 11.6422 5.03223 11.7578C5.06139 11.9747 5.10843 12.043 5.14649 12.0811L5.18262 12.1104C5.22797 12.141 5.30711 12.1735 5.46973 12.1953C5.70094 12.2264 6.01475 12.2275 6.5 12.2275H13.7422C14.2274 12.2275 14.5413 12.2263 14.7725 12.1953C14.9889 12.1662 15.0576 12.1191 15.0957 12.0811L15.126 12.0449C15.1566 11.9996 15.1881 11.9204 15.21 11.7578C15.241 11.5266 15.2422 11.2129 15.2422 10.7275V7.5C15.2422 7.01471 15.241 6.70095 15.21 6.46973C15.1881 6.30741 15.1566 6.22801 15.126 6.18262L15.0957 6.14649C15.0576 6.10843 14.9893 6.06138 14.7725 6.03223C14.5412 6.00119 14.2275 6 13.7422 6H6.5Z"
                fill="#242C32"/>
        </svg>
        ,
        type: "new-device"
    },
];

type ToasterMessageProps = {
    type: string
}

const ToasterMessage = ({type}: ToasterMessageProps) => {
    const toast = ToastMessage.find(t => t.type === type);

    if(!toast) return null;

    return (
        <div className={`scl--login-toast ${toast.type === "new-device" ? "scl--login-toast--wide" : ""}`}>
            <div className="scl--login-toast-message">
                <div className={`scl--login-toast-svg toast--${toast.type}`}>
                    {toast.svg}
                </div>
                <div className="scl--login-toast-title">
                    <p>{toast.title}</p>
                    <p>{toast.description}</p>
                </div>
                {toast.type === 'new-device' && (
                    <div className='scl--login-confirm-newdevice'>
                        <p>That's was me</p>
                        <span/>
                        <p>That's wasn't me</p>
                    </div>
                )}
            </div>
            <div className={`
                    scl--login-toast-bar 
                    toast--${toast.type} 
                    ${toast.type === "new-device" ? "scl--login-toast-bar--wide" : ""}
                `}
            />
        </div>
    )
}

export default ToasterMessage;